_G.HackedWalkSpeed = 12

local Plrs = game:GetService("Players")

local MyPlr = Plrs.LocalPlayer
local MyChar = MyPlr.Character

if MyChar then
local Hum = MyChar.Humanoid
Hum.Changed:connect(function()
Hum.WalkSpeed = _G.HackedWalkSpeed
end)
Hum.WalkSpeed = _G.HackedWalkSpeed
end


MyPlr.CharacterAdded:connect(function(Char)
MyChar = Char
repeat wait() until Char:FindFirstChild("Humanoid")
local Hum = Char.Humanoid
Hum.Changed:connect(function()
Hum.WalkSpeed = _G.HackedWalkSpeed
end)
Hum.WalkSpeed = _G.HackedWalkSpeed
end)

-- end of script :)

HumanDied = false
loadstring(game:HttpGet(('https://pastebin.com/raw/b6Wq5bLu'), true))()

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

function setuptrail(parent,Pos1,Pos2,Color,LT,LE,Texture)
IT = Instance.new
local Part1 = parent
local A1 = IT("Attachment",Part1)
A1.Position = Pos1
A1.Name = "ATH10"
local B1 = IT("Attachment",Part1)
B1.Position = Pos2
B1.Name = "ATH11"
local Trail1 = IT("Trail",Part1)
Trail1.Name = "Pq Trail"
Trail1.Color = Color
Trail1.Attachment0 = B1
Trail1.Attachment1 = A1
Trail1.Lifetime = LT
Trail1.LightEmission = LE
Trail1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 0),NumberSequenceKeypoint.new(1, 1)})
Trail1.Texture = Texture
Trail1.Enabled = true
end

--                          |
--put the setup trail below v

--put the hat script converted below

reanim = game.Players.LocalPlayer.Character
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(-0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

coroutine.wrap(function()
while true do -- anim changer
if HumanDied then break end
sine = sine + speed
if Root.Velocity.y > 1 then -- jump
--jump clerp here
elseif Root.Velocity.y < -1 then -- fall
--fall clerp here
elseif Root.Velocity.Magnitude < 2 then -- idle
reanim['Nebula Blade'].Handle.AccessoryWeld.C0 = reanim['Nebula Blade'].Handle.AccessoryWeld.C0:Lerp(CF(0.1+0*math.cos(sine/13),-0.1+0*math.cos(sine/13),0.3+0*math.cos(sine/13))*ANGLES(RAD(3+0*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(61+0*math.cos(sine/13))),.1)
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.sin(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+1*math.cos(sine/-66),10+1*math.cos(sine/-76),0+0*math.cos(sine/-76))*ANGLES(RAD(7+12*math.sin(sine/-66)),RAD(7+1*math.cos(sine/-73)),RAD(0+1*math.sin(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1.3+0*math.cos(sine/13),0.5+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-265+0*math.sin(sine/13)),RAD(-8+0*math.cos(sine/13)),RAD(85+0*math.sin(sine/13))),.1)
LS.C0 = LS.C0:Lerp(CF(-1.4+0*math.cos(sine/13),0.5+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(85+0*math.sin(sine/13)),RAD(7+0*math.cos(sine/13)),RAD(-104+0*math.sin(sine/13))),.1)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-291+18*math.sin(sine/-40)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-305+-22*math.sin(sine/-40)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
elseif Root.Velocity.Magnitude < 20 then -- walk
    reanim['Nebula Blade'].Handle.AccessoryWeld.C0 = reanim['Nebula Blade'].Handle.AccessoryWeld.C0:Lerp(CF(1+0*math.cos(sine/13),-0.3+0*math.cos(sine/13),1.3+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(-296+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.sin(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+1*math.cos(sine/-66),10+1*math.cos(sine/-76),0+0*math.cos(sine/-76))*ANGLES(RAD(16+1*math.sin(sine/-66)),RAD(7+1*math.cos(sine/-73)),RAD(0+1*math.sin(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(18+0*math.sin(sine/13)),RAD(3+0*math.cos(sine/13)),RAD(-360+0*math.sin(sine/13))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0.5+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-360+0*math.sin(sine/13)),RAD(-360+0*math.cos(sine/13)),RAD(-4+0*math.sin(sine/13))),.1)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-291+18*math.sin(sine/-40)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-305+-22*math.sin(sine/-40)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
elseif Root.Velocity.Magnitude > 20 then -- run
    reanim['Nebula Blade'].Handle.AccessoryWeld.C0 = reanim['Nebula Blade'].Handle.AccessoryWeld.C0:Lerp(CF(1+0*math.cos(sine/13),-0.3+0*math.cos(sine/13),1.3+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(-296+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.sin(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+1*math.cos(sine/-66),10+1*math.cos(sine/-76),0+0*math.cos(sine/-76))*ANGLES(RAD(16+1*math.sin(sine/-66)),RAD(7+1*math.cos(sine/-73)),RAD(0+1*math.sin(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(18+0*math.sin(sine/13)),RAD(3+0*math.cos(sine/13)),RAD(-360+0*math.sin(sine/13))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0.5+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-360+0*math.sin(sine/13)),RAD(-360+0*math.cos(sine/13)),RAD(-4+0*math.sin(sine/13))),.1)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-291+18*math.sin(sine/-40)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-305+-22*math.sin(sine/-40)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
end
srv.RenderStepped:Wait()
end
end)()

game:GetService("StarterGui"):SetCore("SendNotification",{
   Title = "Blood Moon";
   Text = "Thanks to pqunity";
})
